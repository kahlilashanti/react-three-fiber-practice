{"version":3,"sources":["components/Orbit.jsx","components/Background.jsx","components/Floor.jsx","state.js","components/ColorPicker.jsx","components/BoundingBox.jsx","components/Model.jsx","components/Dragable.jsx","components/Cars.jsx","components/CameraControls.jsx","components/CameraButtons.jsx","components/Bulb.jsx","components/Lights.jsx","App.js","reportWebVitals.js","index.js"],"names":["extend","OrbitControls","Orbit","useThree","camera","gl","attach","args","domElement","Background","props","texture","useLoader","THREE","process","formatted","useMemo","image","height","fromEquirectangularTexture","object","Floor","useBox","ref","receiveShadow","transparent","opacity","state","activeMesh","cameraPos","target","shouldUpdate","ColorPicker","handleClick","e","material","color","style","background","position","zIndex","left","right","margin","width","display","top","onClick","BoundingBox","offset","dims","visible","children","mass","api","scale","wireframe","Model","mixer","model","GLTFLoader","path","console","log","animations","length","scene","forEach","clip","clipAction","play","useFrame","delta","update","traverse","child","isMesh","castShadow","side","DragControls","Dragable","groupRef","useRef","controlsRef","useState","setChildren","useEffect","current","addEventListener","orbitControls","enabled","set","copy","velocity","transformGroup","Cars","fallback","Array","fill","rotation","Math","PI","CameraControls","name","activeMeshName","getObjectByName","lerp","clone","sub","bottom","textAlign","borderRadius","fontSize","fontWeight","border","cursor","CameraButtons","sets","num","Bulb","emissive","Lights","intensity","App","powerPreference","antialias","stencil","depth","shadowMap","focusDistance","focalLength","bokehScale","luminanceThreshold","luminanceSmoothing","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.548f7110.chunk.js","sourcesContent":["import { extend, useThree } from 'react-three-fiber';\n\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls';\n\nextend({ OrbitControls })\n\nconst Orbit = () => {\n    const { camera, gl } = useThree();\n    return (\n        <orbitControls\n            attach='orbitControls'\n            args={[camera, gl.domElement]} />\n    )\n}\n\nexport default Orbit;","import { useLoader, useThree } from \"react-three-fiber\";\nimport * as THREE from 'three';\nimport { useMemo } from 'react';\n\nconst Background = props => {\n    const texture = useLoader(\n        THREE.TextureLoader,\n        process.env.PUBLIC_URL + '/riverbank.jpeg'\n    );\n\n    const { gl } = useThree()\n    const formatted = useMemo(() =>\n        new THREE.WebGLCubeRenderTarget(\n            texture.image.height\n        ).fromEquirectangularTexture(gl, texture)\n        , [])\n\n\n\n    return (\n        <primitive attach='background' object={formatted} />\n    )\n}\n\nexport default Background;","\n\nimport { useBox } from 'use-cannon';\n\n\nconst Floor = props => {\n    const [ref, api] = useBox(() => ({ args: [20, 1, 10], ...props }))\n    return (\n        <mesh ref={ref} {...props} receiveShadow>\n            <boxBufferGeometry args={[200, 1, 200]} />\n            <meshPhysicalMaterial transparent opacity={0.2} />\n            {/* <shadowMaterial opacity={0.2} /> */}\n        </mesh>\n    )\n}\n\nexport default Floor;","//export an object that helps keep track of our current mesh\n\n//model_3 color object name: Capot001_CAR_PAINT_0\n//model_s color object name: object005_bod_0\n\nimport * as THREE from 'three';\n\nconst state = {\n    activeMesh: {},\n    cameraPos: new THREE.Vector3(9, 2, 4),\n    target: new THREE.Vector3(4, 0, 0),\n    shouldUpdate: true\n}\n\nexport default state","import * as THREE from 'three';\nimport state from '../state';\n\nconst ColorPicker = props => {\n\n    const handleClick = e => {\n        //if no active mesh return immediately\n        if (!state.activeMesh) return;\n        //otherwise set the color of that mesh's material to whatever color is\n        //selected or on the div\n        //when changing the color on a mesh you have to use THREE.color you can't just pass a string\n        //like a psycho\n        state.activeMesh.material.color = new THREE.Color(e.target.style.background)\n\n    }\n\n    return (\n\n        <div\n            style={{\n                position: 'absolute',\n                zIndex: 1,\n                left: 0,\n                right: 0,\n                margin: 'auto',\n                width: 'fit-content',\n                display: 'flex',\n                top: '20px'\n            }}>\n            🇨<div\n                //handleClick function sets the color of the current mesh\n                //that's on the window when you select one of the colors\n                onClick={handleClick}\n                style={{\n                    background: 'blue',\n                    height: 50,\n                    width: 50\n                }}\n            ></div>\n            <div\n                onClick={handleClick}\n                style={{\n                    background: 'green',\n                    height: 50,\n                    width: 50\n                }}\n            ></div>\n            <div\n                onClick={handleClick}\n                style={{\n                    background: 'coral',\n                    height: 50,\n                    width: 50\n                }}\n            ></div>\n            {/* <div\n                onClick={handleClick}\n                style={{\n                    background: 'white',\n                    height: 50,\n                    width: 50\n                }}\n            ></div> */}\n        </div>\n\n    )\n}\n\nexport default ColorPicker;","import { useBox } from \"use-cannon\";\n\nconst BoundingBox = ({\n    position = [0, 0, 0],\n    offset = [0, 0, 0],\n    dims = [1, 1, 1],\n    visible = false,\n    children\n}) => {\n    const [ref, api] = useBox(() => ({ mass: 1, args: dims, position: position }))\n    return (\n        <group ref={ref} api={api}>\n            <mesh scale={dims} visible={visible}>\n                <boxBufferGeometry />\n                <meshPhysicalMaterial wireframe />\n            </mesh>\n            <group position={offset}>\n                {children}\n            </group>\n        </group>\n    )\n}\n\nexport default BoundingBox;","import { useLoader, useFrame } from \"react-three-fiber\";\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader';\nimport * as THREE from 'three';\n\nconst Model = props => {\n    const model = useLoader(\n        GLTFLoader,\n        process.env.PUBLIC_URL + props.path\n    )\n    //to get a visual of everything that's available within the model including animation properties\n    //if there is animation you'll notice an array called animation\n    console.log(props.path, model)\n\n    let mixer\n\n    //create a conditional statement that runs the animation if my model\n    //has an animation array that is bigger than zero\n    if (model.animations.length > 0) {\n        mixer = new THREE.AnimationMixer(model.scene)\n        //iterate through all the animations on the model\n        model.animations.forEach(clip => {\n            //for each clip create an animation action\n            const action = mixer.clipAction(clip)\n            action.play()\n        })\n    }\n\n    //now call mixer.update in the render loop - need useFrame for this\n    useFrame((scene, delta) => {\n        //delta is seconds since the last frame\n        //not all models have animations so check if mixer exists first using ternary '?'\n        mixer?.update(delta)\n    })\n\n\n    //to cast shadows and traverse all of the objects in the mesh\n    model.scene.traverse(child => {\n        if (child.isMesh) {\n            child.castShadow = true\n            child.receiveShadow = true\n            child.material.side = THREE.FrontSide\n        }\n    })\n\n\n\n    // console.log(model)\n    return (\n        <primitive\n            object={model.scene}\n            scale={props.scale}\n\n        />\n\n    )\n}\n\n\nexport default Model;","import { DragControls } from 'three/examples/jsm/controls/DragControls';\nimport { useRef, useEffect, useState } from 'react';\nimport { extend, useThree } from 'react-three-fiber';\n\nextend({ DragControls });\n\n\n\nconst Dragable = props => {\n    const groupRef = useRef();\n    const controlsRef = useRef();\n    const [children, setChildren] = useState([]);\n    const { camera, gl, scene } = useThree();\n    useEffect(() => {\n        setChildren(groupRef.current.children)\n        // console.log(groupRef.current)\n\n    }, [])\n\n    useEffect(() => {\n        //add an event listener to know when dragable is used or not\n        //so we can toggle orbit \n        controlsRef.current.addEventListener('hoveron', e => scene.orbitControls.enabled = false)\n        controlsRef.current.addEventListener('hoveroff', e => scene.orbitControls.enabled = true);\n        controlsRef.current.addEventListener('dragstart', e => {\n            e.object.api?.mass.set(0)\n            //isolate what part of the mesh is the object you want to change the color of\n            // console.log(e.object)\n\n        });\n        controlsRef.current.addEventListener('dragend', e => e.object.api?.mass.set(1));\n        // controlsRef.current.addEventListener('drag', e => console.log(e.object));\n        controlsRef.current.addEventListener('drag', e => {\n            e.object.api?.position.copy(e.object.position)\n            e.object.api?.velocity.set(0, 0, 0)\n        }\n        )\n    }, [children])\n    return (\n        <group ref={groupRef}>\n            <dragControls\n                //to move the pieces of the mesh as one\n                transformGroup={props.transformGroup}\n                ref={controlsRef}\n                args={[children, camera, gl.domElement]} />\n            {props.children}\n        </group>\n    )\n}\n\nexport default Dragable;","import { Suspense } from 'react';\nimport BoundingBox from './BoundingBox';\nimport Model from './Model';\nimport Dragable from './Dragable';\n\n\n\nconst Cars = ({ }) => {\n    return (\n        <Suspense fallback={null}>\n            <Dragable transformGroup>\n                <BoundingBox\n                    // visible\n                    position={[4, 4, 0]}\n                    dims={[3, 2, 6]}\n                    offset={[0, -0.4, 0.8]}\n                >\n                    <Model\n                        path='/tesla_model_3/scene.gltf'\n                        scale={new Array(3).fill(0.01)}\n                    // position={[4, 0.6, 0]}\n                    />\n                </BoundingBox>\n            </Dragable>\n            <Dragable transformGroup>\n                <BoundingBox\n                    // visible\n                    position={[-4, 4, 0]}\n                    dims={[3, 2, 7]}\n                    offset={[0, -0.8, 0.2]}\n                >\n                    <Model\n                        path='/tesla_model_s/scene.gltf'\n                        scale={new Array(3).fill(0.013)}\n                    // position={[-4, 0.2, 0]}\n                    />\n                </BoundingBox>\n            </Dragable>\n\n            <group rotation={[0, Math.PI, 0]}>\n                <Model\n                    path='/mech_drone/scene.gltf'\n                    scale={new Array(3).fill(0.01)}\n                />\n            </group>\n\n        </Suspense>\n    )\n}\n//use group and pi to rotate the robot model 180 degrees because it was facing backwards when we imported it\nexport default Cars;\n\n","\n\nimport { useFrame } from 'react-three-fiber'\nimport state from '../state'\n\nconst CameraControls = ({ }) => {\n\n    useFrame(({ camera, scene }) => {\n        if (state.activeMesh.name !== state.activeMeshName) {\n            state.activeMesh = scene.getObjectByName(\n                state.activeMeshName\n            ) || {}\n        }\n        if (state.shouldUpdate) {\n            camera.position.lerp(state.cameraPos, 0.1)\n            scene.orbitControls.target.lerp(state.target, 0.1)\n            scene.orbitControls.update()\n            const diff =\n                camera.position.clone()\n                    .sub(state.cameraPos).length()\n            if (diff < 0.1) state.shouldUpdate = false\n        }\n    })\n    return (\n        null\n    )\n}\n\nexport default CameraControls","import state from \"../state\";\n\n\nconst style = {\n    zIndex: 1,\n    position: 'absolute',\n    bottom: '30vh',\n    // left: '40vw',\n    height: '30px',\n    width: '30px',\n    background: 'white',\n    textAlign: 'center',\n    borderRadius: '100%',\n    fontSize: 20,\n    fontWeight: 'bold',\n    opacity: 0.7,\n    border: '1px solid black',\n    cursor: 'pointer'\n}\nconst CameraButtons = ({ }) => {\n    const sets = {\n        //model_3\n        1: {\n            cameraPos: [9, 2, 4],\n            target: [4, 0, 0],\n            name: \"Capot001_CAR_PAINT_0\"\n        },\n        //model_s\n        2: {\n            cameraPos: [1, 2, 5,],\n            target: [-4, 0, 0],\n            name: \"object005_bod_0\"\n        }\n    }\n    const handleClick = num => {\n        state.cameraPos.set(...sets[num].cameraPos)\n        state.target.set(...sets[num].target)\n        state.activeMeshName = sets[num].name\n        state.shouldUpdate = true\n    }\n    return (\n        <>\n            <button\n                onClick={e => handleClick(2)}\n                style={{\n\n                    left: '40vw',\n                    ...style\n                }}>\n                {'<'}\n\n            </button>\n\n            <button\n                onClick={e => handleClick(1)}\n                style={{\n\n                    right: '40vw',\n                    ...style\n                }}>\n                {'>'}\n\n            </button>\n        </>\n\n    )\n}\n\nexport default CameraButtons","const Bulb = props => {\n    return (\n        <mesh {...props}>\n            <pointLight\n                castShadow\n                shadow-mapSize-height={2 ** 10}\n                shadow-mapSize-width={2 ** 10}\n                shadow-radius={10}\n\n            />\n            <sphereBufferGeometry args={[0.2, 20, 20]} />\n            <meshPhongMaterial emissive='white' />\n        </mesh>\n    )\n}\n\nexport default Bulb;","\nimport Bulb from \"./Bulb\"\n\nconst Lights = ({ }) => {\n    return (\n        <>\n            <ambientLight intensity={0.2} />\n            <directionalLight\n                shadow-mapSize-height={2 ** 10}\n                shadow-mapSize-width={2 ** 10}\n                shadow-radius={10}\n                position={[6, 3, 0]}\n                intensity={2}\n                castShadow\n            />\n            <Bulb position={[-6, 3, 0]} />\n            <Bulb position={[0, 3, 0]} />\n            <Bulb position={[6, 3, 0]} />\n        </>\n    )\n}\n\nexport default Lights\n","\nimport './App.css';\n\nimport { Canvas } from 'react-three-fiber'\n//useFrame is a React hook used for animation\n//useFrame can only be used in the canvas\nimport { Physics } from 'use-cannon';\nimport { Suspense } from 'react';\n// import Box from './components/Box'\nimport Orbit from './components/Orbit'\nimport Background from './components/Background';\nimport Floor from './components/Floor';\n// import Bulb from './components/Bulb';\nimport ColorPicker from './components/ColorPicker';\nimport Cars from './components/Cars';\nimport CameraControls from './components/CameraControls';\nimport CameraButtons from './components/CameraButtons';\nimport state from './state';\nimport Lights from './components/Lights';\nimport { EffectComposer, DepthOfField, Bloom } from 'react-postprocessing';\n//to prepare for production we need a public url for any files we are importing from our public folder\n\nfunction App() {\n  //CREATED SCENE USING REACT THREE FIBER\n  return (\n    //as long as we're inside the canvas we can use tags to declare three js objects\n    //we have access to all the namespaces\n    //Canvas takes the width and height of the parent div\n    <div style={{ height: '100vh', width: '100vw' }}>\n      {/* color changer to change color of mesh with a click */}\n      <ColorPicker />\n      <CameraButtons />\n      <Canvas\n        gl={{\n          powerPreference: \"high-performance\",\n          antialias: false,\n          stencil: false,\n          depth: false\n        }}\n\n\n        shadowMap\n        style={{ background: 'black' }}\n        camera={{ position: [7, 7, 7] }}\n      > <CameraControls state={state} />\n        {/* <fog attach='fog' args={['white', 1, 10]} /> */}\n\n        <Lights />\n        <Orbit />\n        <axesHelper args={[5]} />\n\n        <Suspense fallback={null}>\n          <Background />\n        </Suspense>\n        <Physics>\n          <Cars />\n          <Floor position={[0, -0.5, 0]} />\n        </Physics>\n        <EffectComposer>\n          <DepthOfField focusDistance={0} focalLength={0.02} bokehScale={2} height={480} />\n          <Bloom luminanceThreshold={1} luminanceSmoothing={0.9} height={300} />\n        </EffectComposer>\n      </Canvas>\n    </div >\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}